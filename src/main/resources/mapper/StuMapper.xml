<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.spc.dao.StudentDao">
    <sql id="BASE_COLUMN">
      stuId,className,classDateDescription,classPlace,teaName,classNum,startWeek,endWeek
    </sql>

    <select id="findClasses" resultType="hashmap">
        select
        <include refid="BASE_COLUMN"/>
        from Course_choose a
        left join Course b
        on a.classId = b.classId
        <where>
            stuId = #{stuId}
        </where>
    </select>

    <insert id="addChooseCourse" useGeneratedKeys="true" keyProperty="chooseId">
        insert into Course_choose(stuId, classId,score) values(#{stuId}, #{classId},0)
    </insert>
    <delete id="deleteChooseCourse">
       delete from course.Course_choose where stuId=#{stuId} and classId =#{classId};
   </delete>

    <select id="findStudent" resultType="hashmap">
        select DISTINCT
        a.stuId,b.stuName,a.score,c.className,d.departName,c.teaName,c.classNum
        from Course_choose a
        left join course.XjtuUserInfo b
        on a.stuId = b.userno
        left join course.Course c
        on a.classId = c.classId
        left join course.Department d
        on c.departId = d.departId
        <where>
            <if test="classId!=88888888">
                a.classId = #{classId}
            </if>
        </where>
    </select>

    <select id="findAllClassName" resultType="hashmap">
        select distinct classId,className,classNum
        from course.Course
    </select>

    <select id="getWaiStudyTime" resultType="map">
        select c.classTime,c.className
        from
        (select classId
        from course.Course_choose c2
        where c2.stuId=#{stuId}
        ) a
        left  join course.Course c
        on a.classId = c.classId
        where c.departId = 12
    </select>

    <select id="getNotWaiStudyTime" resultType="map">
        select c.classTime,c.className
        from
        (select classId
        from course.Course_choose c2
        where c2.stuId=#{stuId}
        ) a
        left  join course.Course c
        on a.classId = c.classId
        where c.departId!=12
    </select>
    <select id="findTimeChongTu" resultType="map">
        select a.classDateDescription
        from
        (
            select classDateDescription
            from course.Course
            where classId =#{classId}
        ) a
        inner join
        (
            select classDateDescription
            from
            (
                select classId
                from course.Course_choose
                where stuId = #{stuId}
            )  c
            left join  course.Course c2
            on c.classId=c2.classId
        )d
        on d.classDateDescription = a.classDateDescription
    </select>
    
    <delete id="deleteCourse">
        delete
        from course.Course_choose cc
        left join Course c
        on cc.classId = c.classId
        where c.className=#{className} and cc.stuId = #{stuId}
    </delete>
    
    <update id="addClassNum">
      INSERT INTO course.Course_choose (stuId,classId,0) values (#{stuId},SELECT classId FROM course.Course where classNum = #{classNum} and className = #{className} )
    </update>
    
    <select id="findClassNewId">
        select classId
        from course.Course
        where className=(
        select className from course.Course
        where classId=#{classId}) and classNum = #{classNum}
    </select>
    <select id="findClassesByNameAndNum" resultType="map">
        select classId
        from course.Course
        where className=#{className} and classNum = #{classNum}
    </select>
</mapper>
