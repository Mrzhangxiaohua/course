<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.spc.dao.CourseAllDao">

    <sql id="Base_Column_List">
    id,departId,courseId,courseNameCHS,courseNameEN,moduleId,academicYear,classSemester,classHour,stuNumUpperLimit,
    teacherId,teacherName,teachingTeamIds,teachingTeamNames,courseInfo,teacherInfo,operatorId,operatorName,operateDate
  </sql>
    <sql id="courseApplication_base">
    id,departId,departName,courseNameCHS,courseId,courseNameEN,moduleId,academicYear,classSemester,classHour,stuNumUpperLimit,fileInfoId,
    teacherId,teacherName,teachingTeamIds,teachingTeamNames,courseInfo,teacherInfo,isChecked,category,operatorId,operatorName
  </sql>

    <insert id="insertCourse"  useGeneratedKeys="true" keyProperty="fileInfoId" flushCache="true" >
      insert into CourseAll(departId,courseId,courseNameCHS,courseNameEN,moduleId,academicYear,classSemester,classHour,stuNumUpperLimit,teacherId,teacherName,courseInfo,teacherInfo)
      values(#{departId},#{courseId},#{className},null,#{classModuleNum},null,null,#{classTime},null,#{teaId},#{teaName},#{courseInfo},#{teacherInfo})
    </insert>

    <select id="selectCourseAll" resultType="com.spc.model.CourseAll">
        select
        <include refid="Base_Column_List" />
        from CourseAll
        where courseId = #{courseId}
    </select>


    <select id="selectCourseAllWithParams" resultType="com.spc.model.CourseAll">
        select
        <include refid="Base_Column_List" />
        from CourseAll
        <where>
            <if test="academicYear != null and academicYear !=''">
                and academicYear = #{academicYear}
            </if>
            <if test="classSemester != null and classSemester !=''">
                and classSemester = #{classSemester}
            </if>
            <if test="courseId != null and courseId !=''">
                and courseId = #{courseId}
            </if>
        </where>
        limit 1
    </select>

    <select id="selectCourseAllByYearAndDep" resultType="com.spc.model.CourseAll">
        select
        <include refid="Base_Column_List" />
        from CourseAll
        <where>
            1
            <if test="year!=null and year!=''">
                and  academicYear=#{year}
            </if>
            <if test="depId！=null and depId!=''">
                and  departId=#{depId}
            </if>
        </where>
    </select>

    <update id="updateCourseAll" >
      update CourseAll set departId=#{departId},courseId=#{courseId},courseNameCHS=#{courseNameCHS},courseNameEN=#{courseNameEN},moduleId=#{moduleId},academicYear=#{academicYear},
        classSemester=#{classSemester},classHour=#{classHour},stuNumUpperLimit=#{stuNumUpperLimit},teacherId=#{teacherId},teacherName=#{teacherName},teachingTeamIds=#{teachingTeamIds},
        teachingTeamNames=#{teachingTeamNames},courseInfo=#{courseInfo},teacherInfo=#{teacherInfo},operatorId=#{operatorId},operatorName=#{operatorName},operateDate=#{operateDate}
      where id=#{id}
    </update>

    <insert id="insertYearCourse"  useGeneratedKeys="true" keyProperty="id" flushCache="true" >
      insert into CourseAll(departId,courseId,courseNameCHS,courseNameEN,moduleId,academicYear,classSemester,classHour,stuNumUpperLimit,
    teacherId,teacherName,teachingTeamIds,teachingTeamNames,courseInfo,teacherInfo,operatorId,operatorName,operateDate)
      values(#{departId},#{courseId},#{courseNameCHS},#{courseNameEN},#{moduleId},#{academicYear},#{classSemester},#{classHour},#{stuNumUpperLimit},
    #{teacherId},#{teacherName},#{teachingTeamIds},#{teachingTeamNames},#{courseInfo},#{teacherInfo},#{operatorId},#{operatorName},#{operateDate})
    </insert>

    <insert id="insertCourseApp"  useGeneratedKeys="true" keyProperty="id" flushCache="true" >
      insert into courseApplication(id,departId,departName,courseNameCHS,courseNameEN,moduleId,academicYear,classSemester,classHour,stuNumUpperLimit,
    teacherId,teacherName,teachingTeamIds,teachingTeamNames,courseInfo,teacherInfo,fileInfoId,operatorId,operatorName,isChecked,category,courseId)
      values(#{id},#{departId},#{departName},#{courseNameCHS},#{courseNameEN},#{moduleId},#{academicYear},#{classSemester},#{classHour},#{stuNumUpperLimit},
    #{teacherId},#{teacherName},#{teachingTeamIds},#{teachingTeamNames},#{courseInfo},#{teacherInfo},#{fileInfoId},#{operatorId},#{operatorName},#{isChecked},#{category},#{courseId})
    </insert>

    <select id="selectCourseApp" resultType="Map">
        select id,departName, courseId, courseNameCHS, courseNameEN,moduleId,academicYear,classSemester,classHour,
        stuNumUpperLimit,fileInfoId,teacherName,teachingTeamNames,courseInfo,teacherInfo,operatorName,operatorId,operateDate ,isChecked
        from courseApplication
        <where>
            isChecked &lt;&gt; 3pe
            and departId=#{departId}
            <if test="date != null and date !=''">
                and DATE_FORMAT(operateDate,'%Y-%m-%d') = #{date}
            </if>
            <if test="operatorId != null and operatorId !=''">
                and operatorId = #{operatorId}
            </if>
            <if test="operatorName != null and operatorName !=''">
                and operatorName = #{operatorName}
            </if>
        </where>
        order by isChecked asc,operateDate desc

    </select>

    <select id="findCourseCount" resultType="int">
        select IFNULL(max(substring(courseId,8,3)),0)
        from CourseAll
        where substring(courseId,3,5)=#{yearDepart}
    </select>
    <update id="updateCourseAppflag">
        update courseApplication set isChecked=#{result}
        <if test="courseId != null">
            ,courseId=#{courseId}
        </if>
        where id=#{courseAppId}
    </update>


    <select id="findAppByTeaId" resultType="Map" >
        select *
        from courseApplication
        where  operatorId=#{userId}
        order by isChecked asc,operateDate desc
    </select>

    <select id="findAllAppByDate" resultType="map" >
        select <include refid="courseApplication_base" />, DATE_FORMAT(a.operateDate,'%Y-%m-%d')as operateDate,b.modelsName as moduleName
        from courseApplication a
        join models b
        on a.moduleId=b.modelsId
        where isChecked != 3
        <if test="operatorName != ''">
            and operatorName= #{operatorName}
        </if>
        <if test="operatorId != ''">
            and operatorId= #{operatorId}
        </if>
        <if test="departId != ''">
            and departId= #{departId}
        </if>
        <if test="type != 0">
            and category=#{type}
        </if>
        <if test="operateDate != ''">
            and DATE_FORMAT(operateDate,'%Y-%m-%d') = #{operateDate}
        </if>
        <if test="tabKey !=0 and tabKey==1">
            and isChecked = 1
        </if>
        <if test="tabKey !=0 and tabKey==2">
            and isChecked = 0
        </if>
        <if test="tabKey !=0 and tabKey==3">
            and isChecked = 2
        </if>
        order by isChecked asc,operateDate desc
    </select>
    <select id="findAllApp" resultType="map" >
        select <include refid="courseApplication_base" />, DATE_FORMAT(a.operateDate,'%Y-%m-%d')as operateDate,b.modelsName as moduleName
        from courseApplication a
        join models b
        on a.moduleId=b.modelsId
        where isChecked != 3
        <if test="operatorName != ''">
            and operatorName= #{operatorName}
        </if>
        <if test="operatorId != ''">
            and operatorId= #{operatorId}
        </if>
        <if test="departId != ''">
            and departId= #{departId}
        </if>
        <if test="type != 0">
            and  category=#{type}
        </if>
        <if test="tabKey !=0 and tabKey==1">
            and isChecked = 1
        </if>
        <if test="tabKey !=0 and tabKey==2">
            and isChecked = 0
        </if>
        <if test="tabKey !=0 and tabKey==3">
            and isChecked = 2
        </if>
        order by isChecked asc,operateDate desc
    </select>
    <select id="findById" resultType="com.spc.model.CourseApplication">
        select *
        from courseApplication
        where id=#{id}
    </select>

    <insert id="insertPassApp" parameterType="com.spc.model.CourseAll">
      insert into CourseAll(departId,courseId,courseNameCHS,courseNameEN,moduleId,academicYear,classSemester,classHour,stuNumUpperLimit,teacherId,teacherName,teachingTeamIds,teachingTeamNames,courseInfo,teacherInfo,courseAppId)
      values(#{departId},#{courseId},#{courseNameCHS},#{courseNameEN},#{moduleId},#{academicYear},#{classSemester},#{classHour},#{stuNumUpperLimit},#{teacherId},#{teacherName},#{teachingTeamIds},#{teachingTeamNames},#{courseInfo},#{teacherInfo},#{courseAppId})
    </insert>
    <select id="findCourseAll" resultType="map">
        select a.*,b.modelsName as modelName,c.departName
        from course.CourseAll a
        join course.models b
        on a.moduleId=b.modelsId
        join Department c
         on c.departId=a.departId
        where 1=1
        <if test="courseId != '8888' and courseId!=''">
            and a.courseId = #{courseId}
        </if>
        <if test="courseName != '8888' and courseName!=''">
            and a.courseNameCHS = #{courseName}
        </if>
        <if test="departId != '8888' and departId!=''">
            and a.departId = #{departId}
        </if>
        <if test="academicYear != '8888'and academicYear!=''">
            and a.academicYear = #{academicYear}
        </if>
    </select>
    <select id="selectCourseYear" resultType="string">
        select distinct academicYear
        from CourseAll
    </select>
    <delete id="delete">
        delete from CourseAll where id=#{id}
    </delete>

    <select id="findCourseAllById" resultType="com.spc.model.CourseAll">
        select *
        from course.CourseAll
        where id=#{id}
    </select>
    <update id="updateFlag">
        update course.CourseAll
        set flag=1
        where academicYear=#{academicYear}
        and flag=0;
    </update>
    <select id="findNotSure" resultType="com.spc.model.CourseAll">
        select *
        from course.CourseAll
        where academicYear=#{academicYear}
        and flag=0;
    </select>

    <select id="selectDepartCourseApp" resultType="map">

        select a.*,b.modelsName as modelName
        from course.courseApplication a
        join course.models b
        on a.moduleId=b.modelsId
        where a.departId=#{departId}
        <if test="courseId != '8888' and courseId!=''">
            and a.courseId = #{courseId}
        </if>
        <if test="courseName != '8888' and courseName!=''">
            and a.courseNameCHS = #{courseName}
        </if>
        <if test="academicYear != '8888'and academicYear!=''">
            and a.academicYear = #{academicYear}
        </if>
    </select>

    <delete id="deleteCourseApp">
        delete from course.courseApplication where id=#{id}
    </delete>

    <update id="updateCourseApp">
        update course.courseApplication set courseNameCHS=#{courseNameCHS},courseNameEN=#{courseNameEN},
        moduleId=#{moduleId},academicYear=#{academicYear},classSemester=#{classSemester},classHour=#{classHour},
        stuNumUpperLimit=#{stuNumUpperLimit},teacherId=#{teacherId},teacherName=#{teacherName},
        teachingTeamIds=#{teachingTeamIds},teachingTeamNames=#{teachingTeamNames},courseInfo=#{courseInfo},teacherInfo=#{teacherInfo},
        operatorId=#{operatorId},operatorName=#{operatorName},category=#{category}
        where id=#{id}
    </update>

    <update id="updateAppCheck">
        update course.courseApplication
        set isChecked=#{isChecked},courseId=#{courseId}
        where id=#{id};

    </update>

    <select id="findAppByYear" resultType="com.spc.model.CourseApplication">
        select *
        from course.courseApplication
        where academicYear=#{academicYear}
        and departId=#{departId}
        and isChecked=3
    </select>
    <select id="selectFlag" resultType="int">
        select flag
        from courseAllSwitch
    </select>

    <update id="updateCourseAllFlag">
        update courseAllSwitch set flag=#{flag}
    </update>

    <select id="selectAllDepart" resultType="map" >
        select distinct (CourseAll.departId),Department.departName
        from CourseAll
        join Department
        on CourseAll.departId=Department.departId
        <where>
            <if test="academicYear != null and academicYear !=''">
                and academicYear = #{academicYear}
            </if>
        </where>
    </select>

    <select id="findByYearAndDepart" resultType="map">
        select a.*,b.modelsName as moduleName
        from course.CourseAll a
        join course.models b
        on a.moduleId=b.modelsId
        where a.academicYear=#{academicYear}
        and a.departId=#{departId}
        order by a.courseId asc
    </select>

    <delete id="deleteCourseAllByAppId" >
       delete from CourseAll
       where courseAppId=#{id}
    </delete>
    <select id="findCourseAllCount" resultType="int">
        select count(*)
        from course.CourseAll
        where courseId=#{courseId}
        and academicYear=#{academicYear}
    </select>

    <select id="findCourseAppCount" resultType="int">
        select count(*)
        from course.courseApplication
        where courseId=#{courseId}
        and academicYear=#{academicYear}
        and isChecked != 2
    </select>

</mapper>